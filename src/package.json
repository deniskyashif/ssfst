{
    "name": "ssfst",
    "version": "1.0.0",
    "description": "Construction of a subsequential finite state transducer",
    "main": "index.js",
    "scripts": {
        "start": "node example --default",
        "dict": "node --max_old_space_size=4096 --optimize_for_size example.js --cmu-dict",
        "phones": "node example --cmu-phones",
        "test": "jasmine",
        "cover": "node ./node_modules/istanbul/lib/cli.js cover ./node_modules/jasmine/bin/jasmine.js",
        "coveralls": "npm run cover && cat ./coverage/lcov.info | node ./node_modules/coveralls/bin/coveralls.js"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/deniskyashif/ssfst.git"
    },
    "keywords": [
        "finite-automata",
        "transducers",
        "pattern-recognition"
    ],
    "author": "Denis Kyashif <denis.kyashif@gmail.com> deniskyashif.github.io",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/deniskyashif/ssfst/issues"
    },
    "homepage": "https://github.com/deniskyashif/ssfst#readme",
    "devDependencies": {
        "coveralls": "^2.13.1",
        "istanbul": "^0.4.5",
        "jasmine": "^2.6.0"
    }
}
